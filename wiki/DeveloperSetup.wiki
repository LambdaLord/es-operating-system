#summary How to set up the development environment.
#labels HowTos

= Setting up the development environment =

== Prerequisites ==

 * autoconf 2.61 or newer
 * automake 1.10 or newer
 * patch
 * bison 2.1 or newer
 * flex 2.5 or newer
 * gcc 4.0 or newer

For development tools, the following libraries are required:

 * glibc 2.2 or newer, glibc 2.4 or newer recommended: several features don't work with glibc 2.3 or lower.
 * pcre 7.2 or newer configured with the `--enable-utf8` and `--enable-unicode-properties` options.

_Older versions might cause problems._

*Note*: If you are using the latest Linux distribution like [http://fedoraproject.org/ Fedora], you will just need to install the missing packages, if any, from the official repositories. You can test the ES operating system with [http://fabrice.bellard.free.fr/qemu/ QEMU], and you can also test the ES kernel components including the [Conduit TCP/IP stack] or the esjs ECMAScript interpreter as ordinary Linux application programs.

*Note*: If you are using the Mac OS X Leopard with XCode, you will be able to build the minimal ES cross-build tools. You can test the ES operating system with [http://www.kju-app.org/kju/ Q].

=== Fonts ===

Currently, ES uses the Sazanami fonts (http://sourceforge.jp/projects/efont/) and the liberation fonts (https://www.redhat.com/promo/fonts/) for graphics. If these fonts are not installed in your host operating system, please install them, too (with yum, or apt-get, etc.)

=== config.sub ===

Please add 'es' to the operating system list in Automake's `config.sub` as below:

{{{
# Decode manufacturer-specific aliases for certain operating systems.
     :
     :
     :
              | -skyos* | -haiku* | -rdos* | -toppers* | -es*)
}}}

Or you may reinstall automake 1.10 from the source code applying the [http://code.google.com/p/trunk/source/browse/trunk/patches/automake-1.10.patch patch].

=== /opt/es ===

In the following steps, we will set up the ES cross tools in '/opt/es'. Please make sure to create this directory with the appropriate permission. If you prefer to install ES to the other directory, please modify the --prefix and other options accordingly.

{{{
sudo mkdir -p /opt/es
}}}

Also please make sure the path to the cross tool chain is included in the PATH environment variable.

{{{
$ export PATH=/opt/es/bin:$PATH
}}}

== Getting the source code ==

First, Check out the source code from Google Code.

{{{
$ mkdir es
$ cd es
$ mkdir trunk
$ svn checkout http://es-operating-system.googlecode.com/svn/trunk/ trunk
}}}

== Building development tools ==

Second, you need to build development tools including the [esidl] IDL compiler.

{{{
$ mkdir local
$ cd local
$ CFLAGS=-g CXXFLAGS=-g ../trunk/configure
$ make
$ sudo make install
}}}

By default, tools like [esidl], vcopy, vformat, and vlist are copied to `/usr/local/bin`.

== Building the cross tool chain ==

Third, you need to build the cross tool chain building from GNU Binutils, GNU Compiler Collection (GCC), and Newlib.

=== Binutils ===

{{{
$ cd ..
$ mkdir src
$ cd src
$ wget ftp://ftp.gnu.org/gnu/binutils/binutils-2.17.tar.bz2
$ tar -jxvf binutils-2.17.tar.bz2
$ patch -p0 -d . < ../trunk/patches/binutils-2.17.patch
$ cd ..
$ mkdir opt
$ cd opt
$ mkdir binutils
$ cd binutils
$ ../../src/binutils-2.17/configure --target=i386-pc-es --prefix=/opt/es
$ make
$ make install
$ i386-pc-es-as -V
GNU assembler version 2.17 (i386-pc-es) using BFD version 2.17
}}}

=== GCC and Newlib ===

{{{
$ cd ../../src/
$ wget ftp://ftp.gnu.org/gnu/gcc/gcc-4.2.1/gcc-4.2.1.tar.bz2
$ tar -jxvf gcc-4.2.1.tar.bz2
$ patch -p0 -d . < ../trunk/patches/gcc-4.2.1.patch
$ wget ftp://sources.redhat.com/pub/newlib/newlib-1.15.0.tar.gz
$ tar -zxvf newlib-1.15.0.tar.gz
$ patch -p0 -d . < ../trunk/patches/newlib-1.15.0.patch
$ cd gcc-4.2.1
$ ln -s ../newlib-1.15.0/newlib .
$ ln -s ../newlib-1.15.0/libgloss .
$ cd ../../opt
$ mkdir gcc
$ cd gcc
$ ../../src/gcc-4.2.1/configure --target=i386-pc-es --enable-threads --enable-languages=c,c++ --with-gnu-as --with-gnu-ld --with-newlib --prefix=/opt/es
$ make
$ make install
$ i386-pc-es-gcc -v
Using built-in specs.
Target: i386-pc-es
Configured with: ../../src/gcc-4.2.1/configure --target=i386-pc-es --enable-threads --enable-languages=c,c++ --with-gnu-as --with-gnu-ld --with-newlib --prefix=/opt/es
Thread model: es
gcc version 4.2.1
cd ../..
}}}

=== Your development environment is now set up! ===

Please move on to the [BuildingSupportLibraries support libraries setup].

