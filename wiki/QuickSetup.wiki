#summary Setting up the ES development environment using the setup script

= Setting up the ES development environment using the setup script =

If you have problems with building ES from the source tarballs manually, please use the following setup shell script:

  http://es-operating-system.googlecode.com/svn/trunk/setup

It will download the required files from the Internet, and generate build tools, libraries, and ES operating system in sequence.
Note once the setup script is started, it tries to install the prerequisites listed in the DeveloperSetup page, which requires you to execute the sudo command.

The following steps set up the ES SDK under ~/es/sdk:

{{{
$ cd
$ mkdir es
$ cd es
$ wget http://es-operating-system.googlecode.com/svn/trunk/setup
$ chmod +x setup
$ ./setup
// snip
usage: qemu -hda pc/init/fat32.img -serial stdio
$ qemu -hda pc/init/fat32.img -serial stdio
$ export PATH=`pwd`/sdk/bin:$PATH
}}}

When your setup is completed, it shows how to start ES from QEMU. To build your own ES binaries later, please add the path to the ES SDK binaries as illustrated above.
You should also add 'es' to the operating system list in Automake's config.sub file as described later in this page.

The !TrueType fonts listed in the DeveloperSetup page must also be installed somewhere under /usr/share/fonts directory if they are not installed yet. Unless you are using Fedora or Ubuntu 8.04 or later, you are most likely to do this step manually.

Once your setup is completed, the following directory structures will be created in your home directory:

{{{
~/es/
+---local/                  # ES build directory for local tools
+---opt/                    # cross-tool build directory
    +---binutils/
    +---cairo/
    +---expat/
    +---fontconfig/
    +---freetype/
    +---gcc/
    +---pcre/
+---pc/                     # ES build directory for target (pc)
+---sdk/                    # ES SDK
    +---bin/
    +---i386-pc-es/
    +---include/
    +---lib
+---src/                    # open source program source dirctory
    +---binutils-2.19/
    +---cairo-1.4.10/
    +---expat-2.0.1/
    +---fontconfig-2.4.2/
    +---freetype-2.3.5/
    +---gcc-4.3.1/
    +---newlib-1.16.0/
    +---pcre-7.8/
+---trunk/                  # ES source directory
    +---cmd                 # application programs
    +---esidl               # esidl IDL compiler
    +---esjs                # esjs ECMAScript interpreter
    +---include
        +---es              # ES class libraries and template libraries
            +---base        # the common ES interface definitions
            +---device      # the device driver interface definitions
            +---naming      # the namespace interface definitions
            +---util        # miscellaneous interface definitions
    +---init                # the ES kernel image is created here
    +---os
        +---bootsect        # ES boot sectors and kernel loader
        +---fs              # file subsystems
            +---fat         # FAT file subsystem
            +---iso9660     # ISO 9660 file subsystem
        +---kernel          # ES kernel modules
            +---include
            +---pc          # PC specific portion
            +---port        # portable portion
            +---posix       # POSIX specific portion for the ES kernel emulation
            +---testsuite
        +---libes++         # ES class libraries and template libraries
        +---net             # TCP/IP protocol stack
            +---include
            +---src
            +---testsuite
    +---patches             # patch files applied to the cross-development tools and libraries needed by ES
    +---tools               # command line tools for cross development
}}}

----

*Note*: If you are using Ubuntu 7.10, please specify the `-net none` option to run ES on QEMU as below:

{{{
$ qemu -hda fat32.img -serial stdio -soundhw sb16 -net none
}}}

QEMU 0.9.0 comes with Ubuntu 7.10 seems to have a problem with the RTL8029AS Ethernet controller emulation.